name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:

jobs:
  test:
    name: Test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    
    continue-on-error: true

    env:
      POETRY_VIRTUALENVS_CREATE: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: poetry install --no-interaction
    
    - name: Test
      run: poetry run pytest

  publish:
    name: Publish
    
    needs: [test]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Patch version number
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p')
        echo $VERSION
        PLACEHOLDER='version = "4.0.0-dev"'
        VERSION_FILE='pyproject.toml'
        grep "$PLACEHOLDER" "$VERSION_FILE"
        sed -i "s/$PLACEHOLDER/version = \"${VERSION}\"/g" "$VERSION_FILE"
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Build
      run: poetry build

    - name: Publish
      run: poetry publish -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
      if: github.event_name == 'release' && github.event.action == 'published'
